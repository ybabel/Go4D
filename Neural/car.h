#ifndef _CAR_H_
#define _CAR_H_

/**
 * AUTHOR   : LE BAB
 * TITLE    : car
 * DATE     : 26/11/95
 * OBJECT   : small car handling, acceleration, driving, in a random map
 * ACTUAL   : defines : wrap
 * BUGS     :
 */

#include "Common.h"
#include "Image.h"
#include "Drawer2D.h"

using namespace Go4D;

#define dt 0.1

struct Box
{
  int xb,yb,xe,ye;
};

/******************************************************************************\
 * The scenery is the place where the car drives in. It can be generated by
 * various ways, but the basic method is to generate some aleatory boxes
 * that the car must not collide.
\******************************************************************************/
class Scenery : public Drawer2D
{
  public :
  Scenery(int wx, int wy):Drawer2D(wx,wy,true){}
  void Generate(int nbboxes, int boxh); // nb box, weight
  int Collide(int x, int y);
  int Prof(real x, real y, real theta, real maxprof);
};


/******************************************************************************\
 * This class is the car that can drives in a scenery. It can accelerate or
 * rotate and view what is in front of it.
\******************************************************************************/
class Porsche
{
  public :
  Porsche(Scenery &, int visionx, int visiony,
	  real factortheta, real factordepth,
	  real startspeed, real vmin, real vmax, real frot );
  ~Porsche();
  void Init(real speed);
  void Iterate(Drawer2D &);
  void SetAccel(real);
  void SetRotation(real);
  void Vision(Drawer2D &);
  int collision;
  real * vision;
  real distance;
  real v; //speed >minspeed < vmax = acc_max/kfrott
  real x,y, theta; //0<theta<2*M_PI

  protected :
  int visionx;
  int visiony;
  real factortheta, factordepth;
  real vtheta;
  real a;
  real vmin, vmax;
  real frott;
  Scenery * scn;
};

/******************************************************************************\
 * This Porsche have a different viewing method. It don't look with 'rays' like
 * the basic car, but with a 'Box'
\******************************************************************************/
class MapPorsche : public Porsche
{
  public :
  MapPorsche(Scenery &scn, int visionx, int visiony,
	     real factortheta, real factordepth, real startspeed,
	     real vmin , real vamx, real frott)
    : Porsche(scn,visionx, visiony, factortheta, factordepth , 
	      startspeed, vmin, vmax, frott),
    viewer(visionx, visiony, 0){}
  void Vision(Drawer2D &);
  
  private :
  Drawer2D viewer;
};

#endif

